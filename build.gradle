// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.alibaba.arouter'
buildscript {

    apply from: 'config.gradle'

//    addRepos(repositories)
    repositories {
        maven{
            url "http://maven.hypersmart.cc/nexus/content/repositories/releases"
        }
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        maven{ url'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
        maven { url "https://jitpack.io" }
//        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
//        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
        }
        mavenCentral()
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${versions.android_gradle_plugin}"
        classpath "com.alibaba:arouter-register:${versions.arouter_register}"
        classpath deps.kotlin.plugin
        classpath deps.benchmark_gradle
        classpath 'com.tencent.bugly:symtabfileuploader:latest.release'//bugly 符号表插件
        classpath 'com.aliyun.ams:emas-services:1.0.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven{
            url "http://maven.hypersmart.cc/nexus/content/repositories/releases"
        }
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        maven{ url'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
        maven { url "https://jitpack.io" }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
        }
//        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
//        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
        mavenCentral()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
