/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 *
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.app_name="一应未来"
ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.5.2'
versions.apt ="1.8"
versions.apache_commons = "2.5"
versions.appcompat = "1.1.0"
versions.arch_core = "2.0.1"
versions.atsl_core = "1.1.0"
versions.atsl_rules = "1.1.1"
versions.atsl_runner = "1.1.1"
versions.atsl_junit = "1.1.0"
versions.benchmark = "1.0.0"
versions.constraint_layout = "2.0.0-beta3"
versions.core_ktx = "1.0.0"
versions.dagger = "2.16"
versions.dexmaker = "2.2.0"
versions.espresso = "3.1.1"
versions.fragment = "1.2.0-rc02"
versions.glide = "4.9.0"
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.kotlin = "1.3.50"
versions.databind = "3.4.0"
versions.lifecycle = "2.2.0-rc02"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.mockwebserver = "3.8.1"
versions.navigation = "2.2.0-rc02"
versions.okhttp_logging_interceptor = "3.9.0"
versions.paging = "2.1.0"
versions.paging_ktx = "2.1.0"
versions.retrofit = "2.6.2"
versions.robolectric = "4.2"
versions.room = "2.2.2"
versions.rx_android = "2.1.1"
versions.rxjava2 = "2.2.14"
versions.support = "1.0.0"
versions.timber = "4.5.1"
versions.work = "2.1.0"
versions.gson = "2.6.2"
versions.loger = "2.2.0"
versions.arouter_api ="1.5.0"
versions.arouter_compiler ="1.2.2"
versions.arouter_register ="1.0.2"
versions.live_event_bus ="1.5.7"
versions.multidex      ="2.0.1"
versions.photo_view    ="2.0.0"
versions.smartrefresh  ="1.1.0"
versions.matisse       ="0.5.2"
versions.mpchat        ="v3.0.3"
versions.einyun_http   ="1.0.0"
versions.einyun_db   ="1.0.0"
versions.einyun_base   ="1.0.0"
versions.einyun_core   ="1.0.0"
versions.pickerview    ="4.1.9"
versions.x5            ="43697"
versions.zxing            ="1.9.13"
versions.permission_dispatcher ="4.6.0"
versions.permission_dispatcher_processor ="4.6.0"
versions.skin ="4.0.4"
versions.luban ="1.1.8"
versions.picker = "4.1.9"
//versions.leakcanary="1.5.4"
ext.versions = versions


def deps = [:]
deps.benchmark = "androidx.benchmark:benchmark-junit4:$versions.benchmark"
deps.benchmark_gradle = "androidx.benchmark:benchmark-gradle-plugin:$versions.benchmark"

def android =[:]
android.compileSdkVersion = 28
android.buildToolsVersion = "27.0.2"
android.minSdkVersion     = 19
android.targetSdkVersion  = 26
deps.android = android

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.fragment_runtime = "androidx.fragment:fragment:${versions.fragment}"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
support.fragment_testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.extensions= "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.adapter ="com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.core = "androidx.test:core:$versions.atsl_core"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_rules"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"

deps.kotlin = kotlin

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging_ktx"
deps.paging = "androidx.paging:paging-runtime:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def einyun=[:]
einyun.http = "com.einyun.app:einyun-http:$versions.einyun_http"
einyun.db = "com.einyun.app:einyun-db:$versions.einyun_db"
einyun.base = "com.einyun.app:einyun-base:$versions.einyun_base"
einyun.core = "com.einyun.app:einyun-core:$versions.einyun_core"
deps.einyun = einyun
deps.zxing = "me.dm7.barcodescanner:zxing:$versions.zxing"
deps.status_bar ="com.githang:status-bar-compat:latest.integration"
deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.loger = "com.orhanobut:logger:$versions.loger"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.photo_view = "com.github.chrisbanes:PhotoView:$versions.photo_view"
deps.smartrefresh ="com.scwang.smartrefresh:SmartRefreshLayout:$versions.smartrefresh"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.arouter_register_plugin = "com.alibaba:arouter-register:$versions.arouter_register"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.arouter_api = "com.alibaba:arouter-api:$versions.arouter_api"
deps.arouter_compiler = "com.alibaba:arouter-compiler:$versions.arouter_compiler"
deps.live_event_bus   = "com.jeremyliao:live-event-bus-x:$versions.live_event_bus"
deps.multidex         = "androidx.multidex:multidex:$versions.multidex"
deps.matisse          = "com.zhihu.android:matisse:$versions.matisse"
deps.mpchat           = "com.github.PhilJay:MPAndroidChart:$versions.mpchat"
deps.pickerview       ="com.contrarywind:Android-PickerView:$versions.pickerview"
deps.x5               ="com.tencent.tbs.tbssdk:sdk:$versions.x5"
deps.permission_dispatcher ="org.permissionsdispatcher:permissionsdispatcher:$versions.permission_dispatcher"
deps.permission_dispatcher_processor ="org.permissionsdispatcher:permissionsdispatcher-processor:$versions.permission_dispatcher_processor"
//图片压缩
deps.luban            ="top.zibin:Luban:$versions.luban"
deps.picker ="com.contrarywind:Android-PickerView:$versions.picker"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def skin = [:]
skin.support = "skin.support:skin-support:$versions.skin"// skin-support 基础控件支持
skin.appcompat = "skin.support:skin-support-appcompat:$versions.skin"// skin-support 基础控件支持
skin.design = "skin.support:skin-support-design:$versions.skin" // skin-support-design material design 控件支持[可选]
skin.cardview = "skin.support:skin-support-cardview:$versions.skin" // skin-support-cardview CardView 控件支持[可选]
skin.constraint = "skin.support:skin-support-constraint-layout:$versions.skin" // skin-support-constraint-layout ConstraintLayout 控件支持[可选]
deps.skin = skin

//def leakcanary =[:]
//leakcanary.debugCompile= "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
//leakcanary.releaseCompile ="com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"
////leakcanary.testCompile ="com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"
//deps.leakcanary=leakcanary
//def bugly =[:]
//bugly.crashreport="com.tencent.bugly:crashreport:latest.release" //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
//bugly.nativecrashreport= "com.tencent.bugly:nativecrashreport:latest.release" //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
//deps.bugly=bugly

//project config
def project =[:]
project.module_common = ":modulePublic:moduleCommon"
project.einyun_library =":modulePublic:einyunLibrary"
project.module_base = ":moduleSystem:moduleBase"
project.module_db   = ":moduleSystem:moduleDB"
project.module_http   = ":moduleSystem:moduleHttp"
project.module_user = ":moduleCore:moduleUser"
project.module_main = ":moduleCore:moduleMain"
project.module_repairs = ":moduleCore:moduleRepairs"
project.module_complain=":moduleCore:moduleComplain"
project.module_extra = ":moduleCore:moduleExtra"
project.point_check= ":moduleCore:pointCheck"
project.module_patrol= ":moduleCore:modulePatrol"
project.module_sendorder= ":moduleCore:moduleSendOrder"
project.module_approval= ":moduleCore:moduleApproval"
project.module_create= ":moduleCore:moduleCreate"
project.module_patrol =":moduleCore:modulePatrol"
project.module_plan= ":moduleCore:modulePlan"
project.module_mine= ":moduleCore:moduleMine"
project.module_orderpreview=":moduleCore:moduleOrderPreview"
project.module_operatepercent=":moduleCore:moduleOperatePercent"
project.module_customerinquiries=":moduleCore:moduleCustomerInquiries"
project.module_orderlist=":moduleCore:moduleOrderList"
deps.project = project

def server =[:]
//开发调式环境
server.debug = "\"https://bms.einyun.com\""
//测试环境
server.debug_test = "\"http://120.79.213.146\""
//UAT环境
server.uat = "\"https://testbms.einyun.com\""
//正式环境
server.release = "\"https://bms.einyun.com\""
deps.server = server

ext.deps = deps

